 
      return 0;
    });
    rows.forEach(row => tbody.removeChild(row));
    rows.forEach(row => tbody.appendChild(row));
  }
});


<!DOCTYPE html>
<html>
<head>
  <style>
    .sort-button {
      font-size: 12px;
      padding: 2px 5px;
      margin-left: 5px;
      border: none;
      background-color: transparent;
      cursor: pointer;
    }

    .sort-button:focus {
      outline: none;
    }
  </style>
</head>
<body>
  <table>
    <thead>
      <tr>
        <th>ID</th>
        <th id="name-header">Name <button class="sort-button" data-column="name">▲</button></th>
        <th id="age-header">Age <button class="sort-button" data-column="age">▲</button></th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td
    </tbody>
  </table>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const sortButtons = document.querySelectorAll('.sort-button');
      sortButtons.forEach(button => {
        button.addEventListener('click', () => {
          const column = button.dataset.column;
          const isAscending = button.classList.contains('asc');
          sortTable(column, isAscending);
          button.classList.toggle('asc');
          button.textContent = isAscending ? '▼' : '▲';
        });
      });

      function sortTable(column, isAscending) {
        const table = document.querySelector('table');
        const tbody = table.querySelector('tbody');
        const rows = Array.from(tbody.querySelectorAll('tr'));
        rows.sort((rowA, rowB) => {
          const valueA = rowA.querySelector(`td[data-column="${column}"]`).textContent.trim();
          const valueB = rowB.querySelector(`td[data-column="${column}"]`).textContent.trim();
          if (isAscending) {
            return valueA.localeCompare(valueB);
          } else {
            return valueB.localeCompare(valueA);
          }
        });
        rows.forEach(row => tbody.removeChild(row));
        rows.forEach(row => tbody.appendChild(row));
      }
    });
  </script>
</body>
</html

>




<!DOCTYPE html>
<html>
<head>
  <style>
    .sort-button {
      font-size: 12px;
      padding: 2px 5px;
      margin-left: 5px;
      border: none;
      background-color: transparent;
      cursor: pointer;
    }

    .sort-button:focus {
      outline: none;
    }
  </style>
</head>
<body>
  <table>
    <thead>
      <tr>
        <th>ID</th>
        <th id="name-header">Name <button class="sort-button" data-column="name">▲</button></th>
        <th id="age-header">Age <button class="sort-button" data-column="age">▲</button></th>
        <th id="date-header">Date <button class="sort-button" data-column="date">▲</button></th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>1</td>
        <td data-column="name">John</td>
        <td data-column="age">32</td>
        <td data-column="date">2023-06-01</td>
      </tr>
      <tr>
        <td>2</td>
        <td data-column="name">Alice</td>
        <td data-column="age">25</td>
        <td data-column="date">2023-06-15</td>
      </tr>
      <tr>
        <td>3</td>
        <td data-column="name">Bob</td>
        <td data-column="age">40</td>
        <td data-column="date">2023-06-10</td>
      </tr>
    </tbody>
  </table>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const sortButtons = document.querySelectorAll('.sort-button');
      sortButtons.forEach(button => {
        button.addEventListener('click', () => {
          const column = button.dataset.column;
          const isAscending = button.classList.contains('asc');
          sortTable(column, isAscending);
          button.classList.toggle('asc');
          button.textContent = isAscending ? '▼' : '▲';
        });
      });

      function sortTable(column, isAscending) {
        const table = document.querySelector('table');
        const tbody = table.querySelector('tbody');
        const rows = Array.from(tbody.querySelectorAll('tr'));
        rows.sort((rowA, rowB) => {
          const valueA = rowA.querySelector(`td[data-column="${column}"]`).textContent.trim();
          const valueB = rowB.querySelector(`td[data-column="${column}"]`).textContent.trim();
          const dateA = new Date(valueA);
          const dateB = new Date(valueB);
          if (dateA < dateB) {
            return isAscending ? -1 : 1;
          } else if (dateA > dateB) {
            return isAscending ? 1 : -1;
          }
          return 0;
        });
        rows.forEach(row => tbody.removeChild(row));
        rows.forEach(row => tbody.appendChild(row));
      }
    });
  </script>
</body>
</html>

